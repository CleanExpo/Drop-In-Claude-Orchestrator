name: Claude Integration Tests

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]

jobs:
  # TypeScript build and type checking
  typescript-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm typecheck

      - name: Build packages
        run: pnpm build

      - name: Run package tests
        run: pnpm test
        continue-on-error: true

  # Python skills tests
  skills-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test code-validator skill
        run: |
          cd skills/code-validator/v1.0.0
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python test.py

      - name: Test schema-validator skill
        run: |
          cd skills/schema-validator/v1.0.0
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python test.py

  # Claude CLI headless checks (if API key available)
  claude-cli-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Claude CLI
        run: |
          npm install -g @anthropic-ai/claude-code || echo "Claude CLI not yet available"
        continue-on-error: true

      - name: Check CLI scripts exist
        run: |
          test -f scripts/claude/dev.sh
          test -f scripts/claude/plan.sh
          test -f scripts/claude/subagents.sh
          echo "✅ All CLI scripts present"

  # Documentation check
  docs-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check documentation exists
        run: |
          test -f docs/integration-claude.md
          test -f packages/claude-sdk/README.md
          test -f packages/skills-runner/README.md
          test -f skills/README.md
          echo "✅ All documentation present"

      - name: Verify README updated
        run: |
          grep -q "Version 1.2" README.md
          grep -q "Claude Integration Suite" README.md
          echo "✅ README includes v1.2 information"

  # Security scan
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true
